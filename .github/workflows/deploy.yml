name: 배포

on:
  push:
    branches:
      - develop

jobs:
  Depoly:
    runs-on: ubuntu-latest
    steps:
      - name: GitHub 저장소에서 파일 가져오기
        uses: actions/checkout@v4

      - name: JDK 17 설치
        uses: actions/setup-java@v4
        with:
          distribution: corretto
          java-version: 17

      - name: Gradle 권한 부여
        run: chmod +x gradlew

      - name: Environment 값 설정
        env:
          GOOGLE_OAUTH_CLIENT_ID: ${{ secrets.GOOGLE_OAUTH_CLIENT_ID }}
          GOOGLE_OAUTH_CLIENT_SECRET: ${{ secrets.GOOGLE_OAUTH_CLIENT_SECRET }}
          GOOGLE_REDIRECT_URI: ${{ secrets.GOOGLE_REDIRECT_URI }}
          WS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}
        run: echo "Environment variables set"

      - name: ENV 파일 값 설정
        run: |
          echo "GOOGLE_OAUTH_CLIENT_ID=${{ secrets.GOOGLE_OAUTH_CLIENT_ID }}" >> $GITHUB_ENV
          echo "GOOGLE_OAUTH_CLIENT_SECRET=${{ secrets.GOOGLE_OAUTH_CLIENT_SECRET }}" >> $GITHUB_ENV
          echo "GOOGLE_REDIRECT_URI=${{ secrets.GOOGLE_REDIRECT_URI }}" >> $GITHUB_ENV
          echo "AWS_ACCESS_KEY=${{ secrets.AWS_ACCESS_KEY }}" >> $GITHUB_ENV
          echo "AWS_SECRET_KEY=${{ secrets.AWS_SECRET_KEY }}" >> $GITHUB_ENV

      - name: 테스트 및 빌드
        run: ./gradlew clean build

      - name: 빌드된 파일 이름 변경
        run: mv ./build/libs/*SNAPSHOT.jar ./release.jar

      - name: SCP로 EC2에 파일 전송
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          port: 2222
          source: "./release.jar"
          target: "/home/ubuntu/howread-server/tobe"

      - name: SSH로 EC2에 접속하기
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            rm -rf /home/ubuntu/howread-server/current
            mkdir /home/ubuntu/howread-server/current
            mv /home/ubuntu/howread-server/tobe/release.jar /home/ubuntu/howread-server/current
            cd /home/ubuntu/howread-server/current
            sudo fuser -k -n tcp 8080 || true
            nohup java -jar release.jar > ./output.log 2>&1 &
            rm -rf /home/ubuntu/howread-server/tobe
